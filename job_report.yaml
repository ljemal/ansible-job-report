---

# Using Ansible server's facts as the authoritative source for date and time
- name: PLAY 1 Gather facts for local Ansible server to get date and time
  hosts: 18.118.17.247
  connection: local
  gather_facts: yes


- name: PLAY 2 Run jobs and generate report
  hosts: all
  gather_facts: no
  order: sorted

  collections:
    - ansible.builtin
    - community.general

  vars:
    # CSS styling for navbar: menu width, failed/missing colors
    nav_width: 200px
    failed_style: 'color:orangered'
    missing_style: 'color:grey;text-decoration:line-through'
    # Email options
    send_email: false
    smtp_host: ljemal@redhat.com
    smtp_port: 25
    mail_from: "source@email.com"
    mail_to: "dest1@email.com,dest2@email.com"
    mail_subject: "Ansible job report"
    # Uncomment these if authentication is required
    #smtp_user:
    #smtp_pass: 

  pre_tasks:
    
    - name: Create reports/ folder to save reports
      run_once: yes
      delegate_to: 18.118.17.247
      file:
        path: "/home/ec2-user/ansible-automation-platform-setup-bundle-2.2.0-6.1/reports"
        state: directory
    
    # See README.md for an explanation of what is going on here.
    # We set hosts as failed/missing until proven otherwise.
    - name: Set initial job status to catch missing/failed hosts
      set_fact:
        job_success: False
        missing: True
    
    - name: Gather server facts and possibly weed out unavailable hosts
      setup:
    
    - name: Set remaining hosts as 'not missing'
      set_fact:
        missing: False

  tasks:
    
    ############################
    # Add your own tasks here! #
    ############################
    
    - name: Run a command and save the results (ignore errors)
      shell:
        cmd: echo 'This is output from command 1.'
      ignore_errors: yes
      register: cmd1_results
    
    - name: Save command output for later
      set_fact:
        cmd1_saved_results: "{{ cmd1_results }}"

  post_tasks:

    - name: Mark surviving hosts as 'successful'
      set_fact:
        job_success: True

    # Saving curated lists of hosts as localhost facts, to make the Jinja loops easier to read in the template. 
    # To use: hostvars['18.118.17.247']['success_list'] , etc
    - name: Save facts to Ansible server for kernel list, date/time, and success/failed/missing hosts
      delegate_to: 18.118.17.247
      delegate_facts: True
      run_once: yes
      set_fact:
        date_str: "{{ hostvars['18.118.17.247']['ansible_date_time']['date'] }}_{{ hostvars['18.118.17.247']['ansible_date_time']['time'] | replace(':','-') }}"
        date_str_pretty: "{{ hostvars['18.118.17.247']['ansible_date_time']['date'] }} {{ hostvars['18.118.17.247']['ansible_date_time']['time'] }}"
        kernels_list: '{{ hostvars | json_query(kernel_query) | unique | sort }}'
        success_list: '{{ hostvars | dict2items | json_query(success_query) }}'
        failed_list: '{{ hostvars | dict2items | json_query(failed_query) }}'
        missing_list: '{{ hostvars | dict2items | json_query(missing_query) }}'
      vars:
        kernel_query: "*.ansible_kernel"
        success_query: "[?value.job_success==`true`].key"
        failed_query: "[?value.job_success==`false` && value.missing==`false`].key"
        missing_query: "[?value.missing==`true`].key"

    - name: Debug variables (-v)
      delegate_to: 18.118.17.247
      run_once: yes
      debug:
        msg: "{{ item }}"
        verbosity: 1
      loop:
        - "Success: {{ hostvars['18.118.17.247']['success_list'] }}"
        - "Failed: {{ hostvars['18.118.17.247']['failed_list'] }}"
        - "Missing: {{ hostvars['18.118.17.247']['missing_list'] }}"
        - "Kernels: {{ hostvars['18.118.17.247']['kernels_list'] }}"

    - name: Generate job report under ./reports/job_report_{{ hostvars['localhost']['date_str'] }}.html
      delegate_to: 18.118.17.247
      delegate_facts: True
      run_once: yes
      template:
        src: job_report_master.j2
        dest: "/home/ec2-user/ansible-automation-platform-setup-bundle-2.2.0-6.1/reports/job_report_{{ hostvars['18.118.17.247']['date_str'] }}.html"

  
